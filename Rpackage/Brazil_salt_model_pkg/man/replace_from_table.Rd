% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{replace_from_table}
\alias{replace_from_table}
\title{Replace multiple values in a data.table column}
\usage{
replace_from_table(dt, colname, from, to, newcolname = NULL)
}
\arguments{
\item{dt}{A data.table to be changed by reference.}

\item{colname}{A string denoting the name of the column to be changed.}

\item{from}{A vector with values in \code{colname} to be replaced.}

\item{to}{A vector with values in \code{colname} to be replaced.}

\item{newcolname}{A string denoting the name of a new column
to be created. If present, \code{colname} is not altered.
If \code{newcolname = NULL}, \code{colname} is altered by reference}
}
\value{
a data.table, invisibly.
}
\description{
`replace_from_table` replace multiple values in a data.table column.
 . The values in \code{from} arguement are matched
   and replaced by those in \code{to} arguement.
   If \code{newcolname = NULL} the replace is by reference.
}
\examples{
library(data.table)
library(BrazilSaltModelmisc)
dt <- data.table::data.table("a" = 1:5, "b" = seq(1, 2.2, 0.3),
 "d" = letters[1:5])
dt[, e := factor(a, labels = LETTERS[1:5])]
replace_from_table(data.table::copy(dt), "a", 1:3, 3L)[]
replace_from_table(data.table::copy(dt), "a", 3L, -11L)[]
replace_from_table(data.table::copy(dt), "a", 3L, -11L, "newcol")[]
replace_from_table(data.table::copy(dt), "b", 1.3, "a")[]
replace_from_table(data.table::copy(dt), "b", 1.3, "a", "newcol")[]
replace_from_table(data.table::copy(dt), "d", "a", "7")[]
replace_from_table(data.table::copy(dt), "d", "a", 7)[]
replace_from_table(data.table::copy(dt), "e", "B", "J")[]
}
